[{"path":"https://parmsam.github.io/dir2json/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 dir2json authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://parmsam.github.io/dir2json/articles/shiny.html","id":"shiny-example","dir":"Articles","previous_headings":"","what":"Shiny example","title":"dir2json + Shiny","text":"","code":"ui <- fluidPage(     titlePanel(\"Encode Uploaded Files to JSON\"),     sidebarLayout(         sidebarPanel(             fileInput(\"files\", \"Upload Files\", multiple = TRUE),             actionButton(\"encode\", \"Encode to JSON\"),             downloadButton(\"downloadJSON\", \"Download JSON\")         ),         mainPanel(             verbatimTextOutput(\"jsonOutput\")         )     ),     # Custom CSS to enable line wrapping     tags$style(         HTML(\"             #jsonOutput {                 white-space: pre-wrap;                 word-wrap: break-word;                 max-height: 400px;                 overflow-y: auto;             }         \")     ) )  server <- function(input, output, session) {     # Reactive value to store the JSON data     json_data <- reactiveVal(NULL)          observeEvent(input$encode, {         req(input$files) # Ensure files are uploaded                  # Create a temporary directory to store uploaded files         temp_dir <- tempfile()         dir.create(temp_dir)                  # Copy uploaded files to the temporary directory         for (i in seq_len(nrow(input$files))) {             file.copy(input$files$datapath[i], file.path(temp_dir, input$files$name[i]))         }                  # Encode the directory to JSON         json_data(json_encode_dir(temp_dir))     })          # Display the JSON data in the UI     output$jsonOutput <- renderText({         req(json_data())         json_data()     })          # Allow the user to download the JSON file     output$downloadJSON <- downloadHandler(         filename = function() {             \"encoded_files.json\"         },         content = function(file) {             req(json_data())             writeLines(json_data(), file)         }     ) }  shinyApp(ui, server)"},{"path":"https://parmsam.github.io/dir2json/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Parmar. Author, maintainer.","code":""},{"path":"https://parmsam.github.io/dir2json/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Parmar S (2025). dir2json: Convert Directory JSON. R package version 0.0.0.9000, https://github.com/parmsam/dir2json.","code":"@Manual{,   title = {dir2json: Convert Directory to JSON},   author = {Sam Parmar},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/parmsam/dir2json}, }"},{"path":"https://parmsam.github.io/dir2json/index.html","id":"dir2json-","dir":"","previous_headings":"","what":"Convert Directory to JSON","title":"Convert Directory to JSON","text":"goal dir2json provide utility converting directories JSON format decoding JSON back directory structures. particularly useful archiving, sharing, analyzing directory contents structured format. package can handle variety file types within directory, including text binary files (e.g., images, PDFs), converting JSON. can used Shiny app allow users upload files, encode JSON format, process download resulting JSON file. JSON can used format sharing multiple files LLMs.","code":""},{"path":"https://parmsam.github.io/dir2json/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Convert Directory to JSON","text":"Encode directory: Convert directory structure (including files) JSON object. Decode JSON object: Convert JSON object back original directory structure, restoring files folders. Supports mixed file types: Handles text binary files encoding binary files base64 text files plain text. JSON schema: structure JSON output follows defined schema, allowing efficient storage easy parsing.","code":""},{"path":"https://parmsam.github.io/dir2json/index.html","id":"json-schema","dir":"","previous_headings":"Features","what":"JSON Schema","title":"Convert Directory to JSON","text":"JSON schema used dir2json simple flat. file (directory) represented object two main fields: name: file directory name. content: content file. text files, raw content string. binary files, base64-encoded string.","code":""},{"path":"https://parmsam.github.io/dir2json/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Convert Directory to JSON","text":"can install development version dir2json GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"parmsam/codebase2json\")"},{"path":"https://parmsam.github.io/dir2json/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Convert Directory to JSON","text":"basic example shows encode directory JSON decode back:","code":"library(dir2json)  # Create a temporary directory with a file example_dir <- tempfile() dir.create(example_dir) file.create(file.path(example_dir, \"example.txt\")) #> [1] TRUE writeLines(\"Hello, dir2json!\", file.path(example_dir, \"example.txt\"))  # Encode the directory to JSON json_data <- json_encode_dir(example_dir) cat(json_data) #> [{\"name\":\"example.txt\",\"content\":\"Hello, dir2json!\\n\"}]  # Decode the JSON back to a new directory new_dir <- tempfile() json_decode_dir(json_data, new_dir)  # Verify the contents list.files(new_dir, recursive = TRUE) #> [1] \"example.txt\" readLines(file.path(new_dir, \"example.txt\")) #> [1] \"Hello, dir2json!\""},{"path":"https://parmsam.github.io/dir2json/index.html","id":"json-encoding-and-decoding-process","dir":"","previous_headings":"","what":"JSON Encoding and Decoding Process","title":"Convert Directory to JSON","text":"Encoding Directory: json_encode_dir function traverses directory recursively, reading file determining text binary file. Text files directly stored contents JSON, binary files base64-encoded safe transport within JSON format. Decoding JSON Object: json_decode_dir function reads JSON object, restores directory structure, writes files back file system. Binary files decoded base64 back original binary format, text files written plain text.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/as_file_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a File to a List — as_file_list","title":"Convert a File to a List — as_file_list","text":"function converts file structured list encoding.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/as_file_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a File to a List — as_file_list","text":"","code":"as_file_list(path, name = fs::path_file(path), type = NULL)"},{"path":"https://parmsam.github.io/dir2json/reference/as_file_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a File to a List — as_file_list","text":"path character string specifying file path. name optional character string specifying file name. type optional character string specifying file type (\"text\" \"binary\").","code":""},{"path":"https://parmsam.github.io/dir2json/reference/as_file_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a File to a List — as_file_list","text":"structured list representing file.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/json_decode_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode JSON to a Directory — json_decode_dir","title":"Decode JSON to a Directory — json_decode_dir","text":"function decodes JSON string directory structure.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/json_decode_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode JSON to a Directory — json_decode_dir","text":"","code":"json_decode_dir(json_data, dir)"},{"path":"https://parmsam.github.io/dir2json/reference/json_decode_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode JSON to a Directory — json_decode_dir","text":"json_data JSON string representing directory's contents. dir character string specifying target directory.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/json_decode_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode JSON to a Directory — json_decode_dir","text":"None. Creates files specified directory.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/json_encode_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode a Directory to JSON — json_encode_dir","title":"Encode a Directory to JSON — json_encode_dir","text":"function encodes files directory JSON format.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/json_encode_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode a Directory to JSON — json_encode_dir","text":"","code":"json_encode_dir(dir)"},{"path":"https://parmsam.github.io/dir2json/reference/json_encode_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode a Directory to JSON — json_encode_dir","text":"dir character string specifying directory encode.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/json_encode_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode a Directory to JSON — json_encode_dir","text":"JSON string representing directory's contents.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/text_file_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Text File Extensions — text_file_extensions","title":"Get Text File Extensions — text_file_extensions","text":"function returns vector common text file extensions.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/text_file_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Text File Extensions — text_file_extensions","text":"","code":"text_file_extensions()"},{"path":"https://parmsam.github.io/dir2json/reference/text_file_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Text File Extensions — text_file_extensions","text":"character vector text file extensions.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/write_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Files to a Directory — write_files","title":"Write Files to a Directory — write_files","text":"function writes files specified directory based structured list.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/write_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Files to a Directory — write_files","text":"","code":"write_files(sl_app, dest)"},{"path":"https://parmsam.github.io/dir2json/reference/write_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Files to a Directory — write_files","text":"sl_app structured list representing files contents. dest character string specifying target directory.","code":""},{"path":"https://parmsam.github.io/dir2json/reference/write_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Files to a Directory — write_files","text":"None. Writes files specified directory.","code":""}]
